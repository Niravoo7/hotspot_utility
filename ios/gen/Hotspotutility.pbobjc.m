// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hotspotutility.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "Hotspotutility.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(Protosdiagnostics_v1);

#pragma mark - ProtosHotspotutilityRoot

@implementation ProtosHotspotutilityRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - ProtosHotspotutilityRoot_FileDescriptor

static GPBFileDescriptor *ProtosHotspotutilityRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                 objcPrefix:@"Protos"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Protoswifi_services_v1

@implementation Protoswifi_services_v1

@dynamic servicesArray, servicesArray_Count;

typedef struct Protoswifi_services_v1__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *servicesArray;
} Protoswifi_services_v1__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "servicesArray",
        .dataTypeSpecific.clazz = Nil,
        .number = Protoswifi_services_v1_FieldNumber_ServicesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(Protoswifi_services_v1__storage_, servicesArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Protoswifi_services_v1 class]
                                     rootClass:[ProtosHotspotutilityRoot class]
                                          file:ProtosHotspotutilityRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Protoswifi_services_v1__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Protoswifi_connect_v1

@implementation Protoswifi_connect_v1

@dynamic service;
@dynamic password;

typedef struct Protoswifi_connect_v1__storage_ {
  uint32_t _has_storage_[1];
  NSString *service;
  NSString *password;
} Protoswifi_connect_v1__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "service",
        .dataTypeSpecific.clazz = Nil,
        .number = Protoswifi_connect_v1_FieldNumber_Service,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(Protoswifi_connect_v1__storage_, service),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "password",
        .dataTypeSpecific.clazz = Nil,
        .number = Protoswifi_connect_v1_FieldNumber_Password,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(Protoswifi_connect_v1__storage_, password),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Protoswifi_connect_v1 class]
                                     rootClass:[ProtosHotspotutilityRoot class]
                                          file:ProtosHotspotutilityRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Protoswifi_connect_v1__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Protoswifi_remove_v1

@implementation Protoswifi_remove_v1

@dynamic service;

typedef struct Protoswifi_remove_v1__storage_ {
  uint32_t _has_storage_[1];
  NSString *service;
} Protoswifi_remove_v1__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "service",
        .dataTypeSpecific.clazz = Nil,
        .number = Protoswifi_remove_v1_FieldNumber_Service,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(Protoswifi_remove_v1__storage_, service),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Protoswifi_remove_v1 class]
                                     rootClass:[ProtosHotspotutilityRoot class]
                                          file:ProtosHotspotutilityRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Protoswifi_remove_v1__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Protosdiagnostics_v1

@implementation Protosdiagnostics_v1

@dynamic diagnostics, diagnostics_Count;

typedef struct Protosdiagnostics_v1__storage_ {
  uint32_t _has_storage_[1];
  NSMutableDictionary *diagnostics;
} Protosdiagnostics_v1__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "diagnostics",
        .dataTypeSpecific.clazz = Nil,
        .number = Protosdiagnostics_v1_FieldNumber_Diagnostics,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(Protosdiagnostics_v1__storage_, diagnostics),
        .flags = GPBFieldMapKeyString,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Protosdiagnostics_v1 class]
                                     rootClass:[ProtosHotspotutilityRoot class]
                                          file:ProtosHotspotutilityRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Protosdiagnostics_v1__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
